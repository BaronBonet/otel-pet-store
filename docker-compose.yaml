services:
  postgres:
    image: postgres:16
    container_name: petstore_db
    ports:
      - "65300:5432"
    volumes:
      - /tmp/petstore-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "petstore"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "petstore"]
      start_period: 5s
      interval: 2s
      timeout: 1s
      retries: 100

  flyway:
    pull_policy: build
    build:
      context: internal/adapters/repository/postgres/flyway
    container_name: petstore_migrations
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://admin:admin@postgres:5432/petstore"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: petstore_otel_collector
    ports:
      - "4317:4317"
    volumes:
      - ./local/telemetry/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config", "/etc/otel-collector-config.yaml"]
    depends_on:
      - tempo
      - loki

  # Tempo for trace storage
  tempo:
    image: grafana/tempo:latest
    container_name: petstore_tempo_traces
    ports:
      - "3200:3200"
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - "./local/telemetry/tempo.yaml:/etc/tempo.yaml"

  # Loki for log aggregation
  loki:
    image: grafana/loki:latest
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./local/telemetry/loki.yaml:/etc/loki/local-config.yaml

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: petstore_prometheus
    volumes:
      - ./local/telemetry/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    depends_on:
      - otel-collector

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: "Grafana_Observability_Dashboard"
    volumes:
      - ./local/telemetry/grafana/provisioning:/etc/grafana/provisioning
      - ./local/telemetry/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      - loki
      - tempo

volumes:
  postgres_data:
